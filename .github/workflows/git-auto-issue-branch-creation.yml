name: Auto create git branch upon new issue
on:
  issues:
    types: [opened, reopened]

jobs:
  create-issue-branch:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get issue number and title
        id: issue
        run: |
          echo "::set-output name=number::${{ github.event.issue.number }}"
          echo "::set-output name=title::${{ github.event.issue.title }}"
          # Sanitize issue title to:
          # - alnum
          # - replace spaces with hyphen '-'
          # Example:
          # Given an issue title: "Fix the 2'nd bug in UI where there's a # in the form"
          # Becomes:
          #
                                                             # Note there is a space here, to keep both '-' and spaces ' '
          echo ISSUE_BRANCH_NAME=`echo "${{ github.event.issue.title }}" | \
          # Remove non alpha/numeric chars
          tr -cd '[:alnum:]- ' | \
          # Convert spaces to hyphens '-'
          tr ' ' '-' | \
          # Ensure lowercase branch name
          tr '[:upper:]' '[:lower:]' | \
          # Limit branch name to 60 characters
          cut -c -60` >> $GITHUB_ENV

          ALLOWED_BRANCH_NAME_CHARS='[^a-zA-Z0-9-]'
          # Loop through each character in the branch name, replacing any not allowed characer with a hyphen '-'
          while [[ $ISSUE_BRANCH_NAME =~ $ALLOWED_BRANCH_NAME_CHARS ]]; do
            ISSUE_BRANCH_NAME=`echo $ISSUE_BRANCH_NAME | sed -r "s/($ALLOWED_BRANCH_NAME_CHARS)/-/g" | sed 's/--/-/g'`
          done

          echo $ISSUE_BRANCH_NAME >> $GITHUB_ENV

      - name: Create new branch
        run: |
          echo "The issue branch name is ${{ env.ISSUE_BRANCH_NAME}} "
          git checkout -b "${{ steps.issue.outputs.number }}-${{ env.ISSUE_BRANCH_NAME }}"
          git push -u origin HEAD

      - name: Create Empty Commit to allow empty pr
        run: |
          git config --global user.name "nobody"
          git config --global user.email "username@users.noreply.github.com"
          git commit --allow-empty -m "Empty commit to allow auto PR creation"
          git fetch origin
          git rebase --strategy-option=theirs origin/main --verbose # thanks https://joht.github.io/johtizen/build/2022/01/20/github-actions-push-into-repository.html
          git push --verbose
  
      - name: Creating PR based on branch name ${{ github.ref_name }}
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/KarmaComputing/create-pull-request-on-branch-creation/pulls \
          -d '{"title": "#${{ steps.issue.outputs.number }} ${{ env.ISSUE_BRANCH_NAME }}","body":"Pull request related issue: #${{ steps.issue.outputs.number }}. Please pull these awesome changes in!","head":"${{ steps.issue.outputs.number }}-${{ env.ISSUE_BRANCH_NAME }}","base":"main"}'
