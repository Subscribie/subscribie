---
# When a push is made to a branch, deploy an instance of the app using
# that branch. 
# The deployed url will be <branchname>.<domain>

name: Deploy pr preview
on: 
  - pull_request
  # (pull_request_target get fired on external contributer pull requests)
  # - pull_request_target
jobs:
  deploy-pr:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    environment: testing
    steps:
      - name: Dump context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: |
          echo $GITHUB_CONTEXT
      - name: Prepare runner with ssh keys
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOKKU_HOST: ${{ secrets.DOKKU_HOST }}
        run: |
          set -x
          mkdir -p ~/.ssh
          eval `ssh-agent -s`
          ssh-add - <<< "$SSH_PRIVATE_KEY"
          ssh-keyscan $DOKKU_HOST >> ~/.ssh/known_hosts
      - name: Set subdomain (ensure is lowercase for dokku)
        run: |
          set -x
          echo SUBDOMAIN=`echo "${{ github.event.pull_request.user.login }}" | tr '[:upper:]' '[:lower:]'` | cut -c -200 >> $GITHUB_ENV
          echo $GITHUB_ENV
      - name: Create dokku app for pr branch if dosent already exist using dokku apps:create
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOKKU_HOST: ${{ secrets.DOKKU_HOST }}
        run: |
          set -x
          echo The PR was raised by: ${{ github.event.pull_request.user.login }}
          eval `ssh-agent -s`
          ssh-add - <<< "$SSH_PRIVATE_KEY"
          echo Creating dokku app ${{ github.event.pull_request.user.login }}-${{ github.head_ref }}
          ssh dokku@$DOKKU_HOST -C "dokku apps:create ${{ env.SUBDOMAIN }}-${{ github.head_ref }}" | true
          echo The url will be ${{ github.event.pull_request.user.login }}-${{ github.head_ref }}.pcpink.co.uk
          ssh dokku@$DOKKU_HOST -C "dokku git:initialize ${{ env.SUBDOMAIN }}-${{ github.head_ref }}"
          ssh dokku@$DOKKU_HOST -C "dokku git:set ${{ env.SUBDOMAIN }}-${{ github.head_ref }} deploy-branch ${{ github.head_ref }}"
          # set Stripe test keys as env vars dor dokku/docker
          ssh dokku@$DOKKU_HOST -C "dokku config:set --no-restart ${{ env.SUBDOMAIN }}-${{ github.head_ref }} STRIPE_TEST_SECRET_KEY=${{ secrets.STRIPE_TEST_SECRET_KEY }}"
          ssh dokku@$DOKKU_HOST -C "dokku config:set --no-restart ${{ env.SUBDOMAIN }}-${{ github.head_ref }} STRIPE_TEST_PUBLISHABLE_KEY=${{ secrets.STRIPE_TEST_PUBLISHABLE_KEY }}"
          ssh dokku@$DOKKU_HOST -C "dokku config:set --no-restart ${{ env.SUBDOMAIN }}-${{ github.head_ref }} STRIPE_CONNECT_ACCOUNT_ANNOUNCER_HOST=${{ secrets.STRIPE_CONNECT_ACCOUNT_ANNOUNCER_HOST }}"
          ssh dokku@$DOKKU_HOST -C "dokku config:set --no-restart ${{ env.SUBDOMAIN }}-${{ github.head_ref }} FLASK_ENV=development"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy branch ${{ github.head_ref }} to dokku
        uses: idoberko2/dokku-deploy-github-action@v1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          dokku-host: ${{ secrets.DOKKU_HOST }}
          app-name: ${{ env.SUBDOMAIN }}-${{ github.head_ref }}
          git-push-flags: '--force'
          remote-branch: ${{ github.head_ref }}
      - name: Click to see your PR web address
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOKKU_HOST: ${{ secrets.DOKKU_HOST }}
        run: |
          echo Visit your pr here: http://${{ github.event.pull_request.user.login }}-${{ github.head_ref }}.pcpink.co.uk
      - name: 'Comment PR with web address of application live preview'
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "ðŸ™Œ Live preview is here: http://${{ github.event.pull_request.user.login }}-${{ github.head_ref }}.pcpink.co.uk"
            })

      - uses: actions/setup-node@v1

      - uses: microsoft/playwright-github-action@v1

      - name: Install node dependencies needed for Playwright browser tests
        run: npm install

      - name: Run & Record browser automated tests (Playwright)
        env:
          PLAYWRIGHT_HOST: http://${{ github.event.pull_request.user.login }}-${{ github.head_ref }}.pcpink.co.uk/
        run: |
          set -x
          cp .env.example .env
          node --unhandled-rejections=strict tests/browser-automated-tests-playwright/index.js

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: Screenshots-and-video-artifacts
          path: |
            ./*.png
            ./tests/browser-automated-tests-playwright/videos/*

